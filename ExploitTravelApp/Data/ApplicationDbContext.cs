using System;
using System.Collections.Generic;
using System.Text;
using ExploitTravelApp.Models.Bookings;
using ExploitTravelApp.Models.Common;
using ExploitTravelApp.Models.Common.Authentication;
using ExploitTravelApp.Models.Divisions;
using ExploitTravelApp.Models.ExploitPackages;
using ExploitTravelApp.Models.Locations;
using ExploitTravelApp.Models.SimpleCRUDs;
using Microsoft.AspNetCore.Identity;
using Microsoft.AspNetCore.Identity.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;

namespace ExploitTravelApp.Data
{
    public class ApplicationDbContext : IdentityDbContext<ApplicationUser, ApplicationRole, string>
    {
        public ApplicationDbContext(DbContextOptions<ApplicationDbContext> options)
            : base(options)
        {

        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            //modelBuilder.Entity<SectionStandardOperationTime>()
            //.HasKey(m => new { m.StandardOperationTimeId, m.SectionId });

            //modelBuilder.Entity<SectionStandardOperationTime>()
            //    .HasOne(m => m.StandardOperationTime)
            //    .WithMany(d => d.SectionStandardOperationTimes)
            //    .HasForeignKey(k => k.StandardOperationTimeId);

            //modelBuilder.Entity<SectionStandardOperationTime>()
            //    .HasOne(m => m.Section)
            //    .WithMany(d => d.SectionStandardOperationTimes)
            //    .HasForeignKey(k => k.SectionId);

            modelBuilder.Entity<ApplicationRole>().HasData(
                new ApplicationRole { Id = "f686b56a-6986-4228-a0b0-bdec547e3faf", Name = "Admin", NormalizedName = "ADMIN", ConcurrencyStamp = "da9a3b0e-8b6f-4479-81d0-4fd255e23f15", CreatedOn = Convert.ToDateTime("2019-12-01"), Description = "Admin" },
                new ApplicationRole { Id = "w585b57c-2365-8224-c0d0-bdec765e3afa", Name = "Agent", NormalizedName = "AGENT", ConcurrencyStamp = "ea9a3b0f-8b6f-4479-35e0-4fd799e23f16", CreatedOn = Convert.ToDateTime("2019-12-01"), Description = "Agent" },
                new ApplicationRole { Id = "m121b57b-8143-9834-e0f0-bdec765e3gbg", Name = "Visitor", NormalizedName = "VISITOR", ConcurrencyStamp = "la9a3b0g-8b6f-4479-19e0-4fd366e23f17", CreatedOn = Convert.ToDateTime("2019-12-01"), Description = "Visitor" }
             );

            modelBuilder.Entity<ApplicationUser>().HasData(
                new ApplicationUser() { Id = "8ab6ee62-f36c-48b6-ae27-dbb22cbfb507", UserName = "Admin1", NormalizedUserName = "ADMIN1", Email = "admin1@mail.com", NormalizedEmail = "ADMIN1@MAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAEAbX7VEEyj5ZqfNsY3KolqiDANLQbqbByWtffmVGoCjwuYMAbzmLCg4THKc+DlBTsQ==", SecurityStamp = "5TDMS5CNA2GYJK2URB4GDOCQI2NI7EHJ", ConcurrencyStamp = "26d21881-0a3a-44ab-aa4d-10664ace1e2d", UserCategoryId = 3 }
             );

            modelBuilder.Entity<IdentityUserRole<string>>().HasData(
                new IdentityUserRole<string>() { UserId = "8ab6ee62-f36c-48b6-ae27-dbb22cbfb507", RoleId = "f686b56a-6986-4228-a0b0-bdec547e3faf" }
             );

            modelBuilder.Entity<Division>().HasData(
                new Division { Id = 1, Name = "Dhaka" },
                new Division { Id = 2, Name = "Sylhet" },
                new Division { Id = 3, Name = "Chittagong" },
                new Division { Id = 4, Name = "Rajshahi" },
                new Division { Id = 5, Name = "Khulna" },
                new Division { Id = 6, Name = "Barisal" }
             );

            modelBuilder.Entity<UserCategory>().HasData(
                new UserCategory { Id = 1, Name = "Visitor" },
                new UserCategory { Id = 2, Name = "Agent" },
                new UserCategory { Id = 3, Name = "Admin" }
             );

        }

        //Common of Exploit
        public DbSet<Division> Divisions { get; set; }
        public DbSet<Location> Locations { get; set; }
        public DbSet<Bundle> Bundles { get; set; }
        public DbSet<ExploitPackageCategory> ExploitPackageCategories { get; set; }
        public DbSet<ExploitPackage> ExploitPackages { get; set; }
        public DbSet<UserCategory> UserCategories { get; set; }
        public DbSet<Agent> Agents { get; set; }
        public DbSet<Visitor> Visitors { get; set; }
        public DbSet<Hotel> Hotels { get; set; }
        public DbSet<Sight> Sights { get; set; }
        public DbSet<Activity> Activities { get; set; }
        public DbSet<TravelItinerary> TravelItineraries { get; set; }
        public DbSet<Booking> Bookings { get; set; }
        public DbSet<Payment> Payments { get; set; }
        public DbSet<Video> Videos { get; set; }
        public DbSet<Quote> Quotes { get; set; }
        public DbSet<Blog> Blogs { get; set; }

    }
}
