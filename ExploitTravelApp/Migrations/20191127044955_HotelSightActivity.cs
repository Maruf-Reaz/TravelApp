using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;

namespace ExploitTravelApp.Migrations
{
    public partial class HotelSightActivity : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "Activities",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn),
                    ExploitPackageId = table.Column<int>(nullable: false),
                    Name = table.Column<string>(nullable: true),
                    FixedExpense = table.Column<double>(nullable: false),
                    VariableExpense = table.Column<double>(nullable: false),
                    Capacity = table.Column<int>(nullable: false),
                    IsIncluded = table.Column<bool>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Activities", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Activities_ExploitPackages_ExploitPackageId",
                        column: x => x.ExploitPackageId,
                        principalTable: "ExploitPackages",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Hotels",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn),
                    ExploitPackageId = table.Column<int>(nullable: false),
                    NameAddressAndDescription = table.Column<string>(nullable: true),
                    HasSwimmingPool = table.Column<bool>(nullable: false),
                    HasRoofTop = table.Column<bool>(nullable: false),
                    HasTwentyFourSevenSupport = table.Column<bool>(nullable: false),
                    HasGymnasium = table.Column<bool>(nullable: false),
                    HasMusicLounge = table.Column<bool>(nullable: false),
                    HasBar = table.Column<bool>(nullable: false),
                    HasKidsCorner = table.Column<bool>(nullable: false),
                    IsPetFriendly = table.Column<bool>(nullable: false),
                    HasFreeWifi = table.Column<bool>(nullable: false),
                    HasLaundry = table.Column<bool>(nullable: false),
                    HasRestaurant = table.Column<bool>(nullable: false),
                    Room1Type = table.Column<string>(nullable: true),
                    Room1FixedExpense = table.Column<double>(nullable: false),
                    Room1VariableExpense = table.Column<double>(nullable: false),
                    Room1Capacity = table.Column<int>(nullable: false),
                    Room1HasBalcony = table.Column<bool>(nullable: false),
                    Room1HasWardrobe = table.Column<bool>(nullable: false),
                    Room1HasRoomService = table.Column<bool>(nullable: false),
                    Room1HasTV = table.Column<bool>(nullable: false),
                    Room1HasMarbleFloor = table.Column<bool>(nullable: false),
                    Room1HasSittingChair = table.Column<bool>(nullable: false),
                    Room1HasTelephone = table.Column<bool>(nullable: false),
                    Room1HasDeluxBed = table.Column<bool>(nullable: false),
                    Room2Type = table.Column<string>(nullable: true),
                    Room2FixedExpense = table.Column<double>(nullable: false),
                    Room2VariableExpense = table.Column<double>(nullable: false),
                    Room2Capacity = table.Column<int>(nullable: false),
                    Room2HasBalcony = table.Column<bool>(nullable: false),
                    Room2HasWardrobe = table.Column<bool>(nullable: false),
                    Room2HasRoomService = table.Column<bool>(nullable: false),
                    Room2HasTV = table.Column<bool>(nullable: false),
                    Room2HasMarbleFloor = table.Column<bool>(nullable: false),
                    Room2HasSittingChair = table.Column<bool>(nullable: false),
                    Room2HasTelephone = table.Column<bool>(nullable: false),
                    Room2HasDeluxBed = table.Column<bool>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Hotels", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Hotels_ExploitPackages_ExploitPackageId",
                        column: x => x.ExploitPackageId,
                        principalTable: "ExploitPackages",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Sights",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn),
                    ExploitPackageId = table.Column<int>(nullable: false),
                    Name = table.Column<string>(nullable: true),
                    FixedExpense = table.Column<double>(nullable: false),
                    VariableExpense = table.Column<double>(nullable: false),
                    Capacity = table.Column<int>(nullable: false),
                    IsIncluded = table.Column<bool>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Sights", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Sights_ExploitPackages_ExploitPackageId",
                        column: x => x.ExploitPackageId,
                        principalTable: "ExploitPackages",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "IX_Activities_ExploitPackageId",
                table: "Activities",
                column: "ExploitPackageId");

            migrationBuilder.CreateIndex(
                name: "IX_Hotels_ExploitPackageId",
                table: "Hotels",
                column: "ExploitPackageId");

            migrationBuilder.CreateIndex(
                name: "IX_Sights_ExploitPackageId",
                table: "Sights",
                column: "ExploitPackageId");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "Activities");

            migrationBuilder.DropTable(
                name: "Hotels");

            migrationBuilder.DropTable(
                name: "Sights");
        }
    }
}
