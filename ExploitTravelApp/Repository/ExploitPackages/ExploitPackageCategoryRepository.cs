using ExploitTravelApp.Data;
using ExploitTravelApp.Models.ExploitPackages;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace ExploitTravelApp.Repository.ExploitPackages
{
    public class ExploitPackageCategoryRepository
    {
        private readonly ApplicationDbContext _context;

        public ExploitPackageCategoryRepository(ApplicationDbContext context)
        {
            _context = context;
        }

        public async Task<List<ExploitPackageCategory>> GetAll()
        {
            var exploitPackageCategories = await _context.ExploitPackageCategories.ToListAsync();
            return exploitPackageCategories;
        }

        public async Task<ExploitPackageCategory> GetById(int id)
        {
            var exploitPackageCategory = await _context.ExploitPackageCategories.FirstOrDefaultAsync(m => m.Id == id);
            return exploitPackageCategory;
        }

        public async Task<int> CreateExploitPackageCategory(ExploitPackageCategory exploitPackageCategory)
        {
            int count = 0;
            _context.Add(exploitPackageCategory);
            count = await _context.SaveChangesAsync();
            return count;
        }

        public async Task<int> EditExploitPackageCategory(ExploitPackageCategory exploitPackageCategory)
        {
            int count = 0;
            _context.Update(exploitPackageCategory);
            await _context.SaveChangesAsync();
            return count;
        }

        public bool ExploitPackageCategoryExists(int id)
        {
            return _context.ExploitPackageCategories.Any(m => m.Id == id);
        }
    }
}
