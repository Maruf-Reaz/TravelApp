using ExploitTravelApp.Data;
using ExploitTravelApp.Models.Locations;
using ExploitTravelApp.Repository.Locations;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace ExploitTravelApp.Service.Locations
{
    public class LocationService
    {
        private readonly LocationRepository _repository;

        public LocationService(LocationRepository repository)
        {
            _repository = repository;
        }

        public async Task<List<Location>> GetAll()
        {
            var locations = await _repository.GetAll();
            return locations;
        }

        public async Task<Location> GetById(int id)
        {
            var location = await _repository.GetById(id);
            return location;
        }

        public async Task<int> CreateLocation(Location location)
        {
            int count = await _repository.CreateLocation(location);
            return count;
        }

        public async Task<int> EditLocation(Location location)
        {
            int count = await _repository.EditLocation(location);
            return count;
        }

        public bool LocationExists(int id)
        {
            return _repository.LocationExists(id);
        }
    }
}
